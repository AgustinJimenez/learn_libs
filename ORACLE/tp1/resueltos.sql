BEGIN 
	
	PCK_PRESTAMO.P_GENERAR_PRESTAMO(10000000, 'PRESTAMO ORDINARIO', 12, 1);	
	
	DBMS_OUTPUT.PUT_LINE('SUMA DA: ' || PCK_PRESTAMO.F_CALCULAR_PATRIMONIO( 1 ) );
	DBMS_OUTPUT.PUT_LINE('INGRESOS DAN: ' || PCK_PRESTAMO.F_CALCULAR_INGRESO( 1 ) );
	
	-- SELECT * FROM SOCIO
	-- SELECT * FROM PRESTAMOS
	-- SELECT * FROM TIPO_PRESTAMO
	-- SELECT * FROM CUOTAS
	-- DELETE FROM PRESTAMOS
	-- DELETE FROM CUOTAS
END;












--==========================================================================================================================
/*
 * 
	SELECT ( LINE ||'/'|| POSITION ||' '|| TEXT ) ERROR FROM SYS.USER_ERRORS WHERE NAME LIKE '%PCK_PRESTAMO%' AND TYPE = 'PACKAGE';
	
	SELECT OBJECT_NAME, OBJECT_TYPE, STATUS FROM DBA_OBJECTS WHERE OBJECT_NAME LIKE '%' || 'PCK_PRESTAMO' || '%';
	
*/

--BEGIN PACKAGE 
CREATE OR REPLACE PACKAGE 
	PCK_PRESTAMO
AS
	TYPE
		R_CUOTAS
	IS RECORD 
		( AMORTIZACION_CAPITAL NUMBER, INTERESES NUMBER, FECHA_VENCIMIENTO DATE );

	TYPE
		T_CUOTAS
	IS TABLE OF
		R_CUOTAS
	INDEX BY
		binary_integer;
		
	PROCEDURE
	P_GENERAR_PRESTAMO
	(
		MONTO_CAPITAL NUMBER,
		TIPO_PRESTAMO VARCHAR2,
		PLAZO NUMBER,
		NRO_SOCIO NUMBER
	);
	
	FUNCTION F_CALCULAR_CUOTAS
	(
		CAPITAL NUMBER,
        TASA_INTERES_ANUAL NUMBER,
        PLAZO NUMBER
	)
	RETURN 
		T_CUOTAS;
		
	FUNCTION F_CALCULAR_INGRESO(ID_SOCIO NUMBER) RETURN NUMBER;
	FUNCTION F_CALCULAR_PATRIMONIO( ID_SOCIO NUMBER ) RETURN NUMBER;
	
		
END;
























------------------------------------------------------------------------------------
/*
 * 
 	SELECT ( LINE ||'/'|| POSITION ||' '|| TEXT ) ERROR FROM SYS.USER_ERRORS WHERE NAME = 'PCK_PRESTAMO' AND TYPE = 'PACKAGE BODY';
 	
	SELECT ( LINE ||'/'|| POSITION ||' '|| TEXT ) ERROR FROM SYS.USER_ERRORS WHERE NAME = 'F_CALCULAR_CUOTAS' AND TYPE = 'FUNCTION';
	
*/
CREATE OR REPLACE PACKAGE BODY
	PCK_PRESTAMO
IS
	FUNCTION F_CALCULAR_CUOTAS
    ( 
        CAPITAL NUMBER,
        TASA_INTERES_ANUAL NUMBER,
        PLAZO NUMBER
    ) 
    RETURN 
        T_CUOTAS
    IS
        CO NUMBER := CAPITAL;
        I NUMBER := ( ( TASA_INTERES_ANUAL/12 )/100);
        N NUMBER := PLAZO;
        
        V_FECHA_VENCIMIENTO DATE := SYSDATE;
        V_MONTO_CUOTA NUMBER := ( 
		    						CO * (( I * POWER( (1+I), N ) )/( POWER( ( 1 + I ), N ) - 1 ) )
			    			 	 );
			    			 	 
        V_INTERES NUMBER := 0;
        V_AMORTIZAR NUMBER := 0;
        V_CAPITAL_INICIAL NUMBER := CAPITAL;
        V_TAB_CUOTAS T_CUOTAS;
        V_MES_ANTERIOR DATE := SYSDATE;
    BEGIN
	    
	    FOR V_INDEX IN 1..N LOOP
	
	    	V_INTERES := V_CAPITAL_INICIAL * I;
	    	V_AMORTIZAR := ( V_MONTO_CUOTA - V_INTERES );
	    	V_CAPITAL_INICIAL := V_CAPITAL_INICIAL - V_AMORTIZAR;
	 		
	
	 		BEGIN
		    	V_MES_ANTERIOR := V_TAB_CUOTAS( V_INDEX - 1 ).FECHA_VENCIMIENTO;
		    EXCEPTION
		    	WHEN NO_DATA_FOUND THEN
		    		V_MES_ANTERIOR := SYSDATE;
	    	END;
	    	
	    	V_TAB_CUOTAS( V_INDEX ).AMORTIZACION_CAPITAL := V_AMORTIZAR ;
	    	V_TAB_CUOTAS( V_INDEX ).INTERESES := V_INTERES;
	    	V_TAB_CUOTAS( V_INDEX ).FECHA_VENCIMIENTO := ADD_MONTHS(V_MES_ANTERIOR, 1);
	    
	    END LOOP;  
	    RETURN V_TAB_CUOTAS;
    EXCEPTION 
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR EN FUNCTION CUOTAS' || '[ ' || TO_CHAR(SQLCODE)||': '|| SQLERRM || ' ]');
    END;
    
    ------------------------------------------------------------------------------------	
	-- SELECT ( LINE ||'/'|| POSITION ||' '|| TEXT ) ERROR FROM SYS.USER_ERRORS WHERE NAME = 'P_GENERAR_PRESTAMO' AND TYPE = 'PROCEDURE';
	PROCEDURE
		P_GENERAR_PRESTAMO
		(
			MONTO_CAPITAL NUMBER,
			TIPO_PRESTAMO VARCHAR2,
			PLAZO NUMBER,
			NRO_SOCIO NUMBER
		)
	IS
		CANTIDAD_SOCIOS NUMBER := 0;
		V_NRO_PRESTAMO number;
		V_CODIGO_TIPO PRESTAMOS.CODIGO_TIPO%TYPE;
		V_T_CUOTAS PCK_PRESTAMO.T_CUOTAS;
		V_TAZA_INTERES_ANUAL NUMBER;
	BEGIN
		SELECT 
			COUNT(*) CANTIDAD_SOCIOS
		INTO
			CANTIDAD_SOCIOS
		FROM
			SOCIO
		WHERE
			MOTIVO_BAJA IS NULL
		AND
			ID_SOCIO = NRO_SOCIO;
			
		BEGIN
			IF TIPO_PRESTAMO != 'PRESTAMO ORDINARIO' AND TIPO_PRESTAMO != 'PRESTAMO PARA VIVIENDA' AND TIPO_PRESTAMO != 'PRESTAMO POR SALUD' THEN
				DBMS_OUTPUT.PUT_LINE('TIPO DE PRESTAMO INVALIDO');
			ELSE
				IF CANTIDAD_SOCIOS < 1 THEN
					DBMS_OUTPUT.PUT_LINE('SOCIO NO EXISTE');
				ELSE
					
					SELECT NVL( MAX(NRO_PRESTAMO), 0 ) + 1 NEW_NRO_PRESTAMO INTO V_NRO_PRESTAMO FROM PRESTAMOS;
					SELECT CODIGO_TIPO, TASA_INTERES_ANUAL INTO V_CODIGO_TIPO, V_TAZA_INTERES_ANUAL FROM TIPO_PRESTAMO WHERE NOMBRE_TIPO = TIPO_PRESTAMO;
					
					DECLARE
						TMP_MONTO_CUOTA NUMBER := 0;
					BEGIN
						INSERT INTO PRESTAMOS VALUES(V_NRO_PRESTAMO, NRO_SOCIO, V_CODIGO_TIPO, SYSDATE, MONTO_CAPITAL, PLAZO, NULL, NULL);
						DBMS_OUTPUT.PUT_LINE('PRESTAMO REALIZADO CORRECTAMENTE');
						
						V_T_CUOTAS := PCK_PRESTAMO.F_CALCULAR_CUOTAS( MONTO_CAPITAL, V_TAZA_INTERES_ANUAL, PLAZO ); 	
						
						FOR MES IN 1..PLAZO LOOP
							TMP_MONTO_CUOTA := V_T_CUOTAS(MES).AMORTIZACION_CAPITAL + V_T_CUOTAS(MES).INTERESES;
							INSERT INTO CUOTAS VALUES( V_NRO_PRESTAMO, MES, V_T_CUOTAS(MES).AMORTIZACION_CAPITAL, TMP_MONTO_CUOTA, V_T_CUOTAS(MES).INTERESES, TMP_MONTO_CUOTA/11, V_T_CUOTAS(MES).FECHA_VENCIMIENTO, NULL, NULL );
		    			END LOOP; 
						
					EXCEPTION
						WHEN OTHERS THEN
							DBMS_OUTPUT.PUT_LINE('ERROR EN SQL INSERT PRESTAMO' || '[ ' || TO_CHAR(SQLCODE)||': '|| SQLERRM || ' ]');
					END;
					
				END IF;
			END IF;
		END;
	EXCEPTION
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('ERROR EN PROCEDURE P_GENERAR_PRESTAMO');
	END;
    
    ---------------------------------------------------------------------------------------------------------------------------------
	-- SELECT ( LINE ||'/'|| POSITION ||' '|| TEXT ) ERROR FROM SYS.USER_ERRORS WHERE NAME = 'F_CALCULAR_INGRESO' AND TYPE = 'FUNCTION';
	FUNCTION F_CALCULAR_INGRESO(ID_SOCIO NUMBER)
	RETURN 
		NUMBER
	IS
		DIFERENCIA NUMBER := 0;
	BEGIN
		SELECT 
			SUM( DECODE( INGRESO_GASTO, NULL, 0, 'G', IMPORTE*-1, IMPORTE ) ) DIFERENCIA 
		INTO
			DIFERENCIA
		FROM 
			INGRESOS_Y_GASTOS IG 
		JOIN 
			CONCEPTOS C ON IG.ID_CONCEPTO = C.ID_CONCEPTO;
		RETURN DIFERENCIA;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			DBMS_OUTPUT.PUT_LINE('NO SE ENCONTRO AL SOCIO');
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('ERROR EN PROCEDURE P_GENERAR_PRESTAMO');
	END;
	
	---------------------------------------------------------------------------------------------------------------------------------
	/*
	 
	SELECT ( LINE ||'/'|| POSITION ||' '|| TEXT ) ERROR FROM SYS.USER_ERRORS WHERE NAME = 'F_CALCULAR_PATRIMONIO' AND TYPE = 'FUNCTION';
	
	*/
	FUNCTION
		F_CALCULAR_PATRIMONIO( ID_SOCIO NUMBER ) 
	RETURN 
		NUMBER
	IS
		V_SUMA_VALORES NUMBER := 0;
	BEGIN
		SELECT 
			SUM(SUMA_VALORES)
	  	INTO
	  		V_SUMA_VALORES
	  	FROM 
  		(
      		SELECT SUM( VALOR ) SUMA_VALORES FROM RODADOS WHERE RODADOS.ID_SOCIO = 1
      		UNION ALL
      		SELECT SUM( VALOR_AVALUO ) SUMA_VALORES FROM INMUEBLES WHERE INMUEBLES.ID_SOCIO = 1
  		);
		RETURN V_SUMA_VALORES;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			DBMS_OUTPUT.PUT_LINE('NO SE ENCONTRO AL SOCIO');
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('ERROR EN PROCEDURE P_GENERAR_PRESTAMO');
	END;

----------------------    
END;





	