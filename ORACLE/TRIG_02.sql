CREATE OR REPLACE TRIGGER T_ACTUALIZA_STOCK 
AFTER INSERT OR UPDATE OF CANTIDAD
ON B_DETALLE_VENTAS FOR EACH ROW 
	DECLARE
		V_STOCK B_ARTICULOS.STOCK_ACTUAL%TYPE;
		V_NS B_ARTICULOS.STOCK_ACTUAL%TYPE;
		V_CANT NUMBER;
		V_ERROR EXCEPTION;
	BEGIN
		SELECT STOCK_ACTUAL INTO V_STOCK 
			FROM B_ARTICULOS
			WHERE ID=:NEW.ID_ARTICULO;
			
		IF INSERTING THEN 
			V_NS:= V_STOCK - :NEW.CANTIDAD;			
			IF PACK_GLOBAL.V_FILAS(:NEW.ID_VENTA)>=7 THEN 
				RAISE V_ERROR;
			END IF;
		ELSE 
			V_NS:= V_STOCK + :OLD.CANTIDAD - :NEW.CANTIDAD;	
		END IF;
		
		UPDATE B_ARTICULOS A
			SET A.STOCK_ACTUAL= V_NS
			WHERE A.ID=:NEW.ID_ARTICULO;
			
	EXCEPTION
		WHEN V_ERROR THEN
			RAISE_APPLICATION_ERROR(-20001,'NO PUEDE INSERTAR MAS DE 10 LINEAS');
		WHEN OTHERS THEN		
			RAISE_APPLICATION_ERROR(-20002,'ERROR AL ACTUALIZAR STOCK');
	END;
CREATE PACKAGE PACK_GLOBAL IS
	TYPE T_FILAS IS TABLE OF NUMBER 
		INDEX BY BINARY_INTEGER;
	V_FILAS T_FILAS;
END;


CREATE OR REPLACE TRIGGER BEFORE 
INSERT ON B_DETALLE_VENTAS 
 DECLARE
	CURSOR C_ITEMS IS
		SELECT ID_VENTA, COUNT (*) CANT
			FROM B_DETALLE_VENTAS 
			GROUP BY ID_VENTA;
 BEGIN	
	FOR R IN C_ITEMS LOOP
		PACK_GLOBAL.V_FILAS(R.ID_VENTA):=R.CANT;
	END LOOP;
END;


	











	
	/*
	CANTIDAD EN ARTICULOS = 113
	
	UPDATE CANTIDAD=5 WHERE ID_VENTA =1 AND ID_ARTI=555
	    2 FILAS ACTUALIZADAS
		--ANTES DEL UPDATE
		VENTA	ID_ARTICULO 	CANTIDAD	ITEM
			1 	 555				10		 5
			1 	 555				10		 6	
		--LO QUE HIZO EL TRIGGER
		--PARA EL ITEM 5
		BUSCO CANTIDAD EN ARTICULOS,
		V_STOCK==>113, :OLD.CANTIDAD ==>  10  
			:NEW.CANTIDAD ==> 5
		V_NS:= 113 + 10 - 5; 118	
		
		--PARA EL ITEM 6
		BUSCO CANTIDAD EN ARTICULOS,
		V_STOCK==> 113  :OLD.CANTIDAD ==> 10   
			:NEW.CANTIDAD ==> 5
		V_NS:= V_STOCK + :OLD.CANTIDAD - :NEW.CANTIDAD;	
		V_NS:= 113 + 10 - 5 = 118
		
  ID_VENTA ID_ARTICULO   CANTIDAD NUMERO_ITEM
---------- ----------- ---------- --------------------------
    PRECIO

INSERT INTO B_DETALLE_VENTAS VALUES 
(1,	 567054, 30,7,6000);
	
	
	
	
	
	
	
	
	
	
	
	*/